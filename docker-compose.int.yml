services:
  flight-info-aggregate-lambda:
    container_name: 'integration-flight-info-aggregate-lambda'
    build:
      context: .
      target: build
    command: npm run test:integration
    healthcheck:
      # wait for database to be ready to accept connections
      test: ['CMD', 'curl', '-f', 'http://database:5432']
      interval: 10s
      timeout: 10s
      retries: 3
    env_file:
      - ./.env.integration
    depends_on:
      - database

  database:
    container_name: 'integration-flight-booking-postgres'
    image: 'postgres:14'
    ports:
      - 5432:5432
    logging:
      driver: none
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: integration-flight-booking
    volumes:
      - ./sql/int-data:/var/lib/postgresql/data

volumes:
  db-data:
